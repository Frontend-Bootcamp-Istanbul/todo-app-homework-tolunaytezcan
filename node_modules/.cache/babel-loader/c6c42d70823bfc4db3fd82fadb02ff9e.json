{"ast":null,"code":"export const todoReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_TODO':\n      return [...state, {\n        id: Math.random(),\n        completed: false,\n        content: action.payload\n      }];\n\n    case \"TOGGLE_TODO\":\n      return state.map(todo => {\n        if (todo.id === action.payload) {\n          return { ...todo,\n            completed: !todo.completed\n          };\n        }\n\n        return todo;\n      });\n\n    case \"DELETE_TODO\":\n      return state.filter(todo => {\n        return todo.id !== action.payload;\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Tolu/Documents/GitHub/todo-app-homework-tolunaytezcan/src/redux/reducers.js"],"names":["todoReducer","state","action","type","id","Math","random","completed","content","payload","map","todo","filter"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,CAACC,KAAK,GAAE,EAAR,EAAYC,MAAZ,KAAwB;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACK,aAAO,CAAC,GAAGF,KAAJ,EAAW;AACdG,QAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,EADU;AAEdC,QAAAA,SAAS,EAAE,KAFG;AAGdC,QAAAA,OAAO,EAAEN,MAAM,CAACO;AAHF,OAAX,CAAP;;AAKL,SAAK,aAAL;AACI,aAAOR,KAAK,CAACS,GAAN,CAAWC,IAAD,IAAU;AACvB,YAAGA,IAAI,CAACP,EAAL,KAAYF,MAAM,CAACO,OAAtB,EAA8B;AAC1B,iBAAO,EAAC,GAAGE,IAAJ;AAAUJ,YAAAA,SAAS,EAAE,CAACI,IAAI,CAACJ;AAA3B,WAAP;AACH;;AACD,eAAOI,IAAP;AACH,OALM,CAAP;;AAMH,SAAK,aAAL;AACI,aAAOV,KAAK,CAACW,MAAN,CAAaD,IAAI,IAAI;AACxB,eAAOA,IAAI,CAACP,EAAL,KAAYF,MAAM,CAACO,OAA1B;AACH,OAFM,CAAP;;AAOL;AACI,aAAOR,KAAP;AAvBR;AAyBN,CA1BM","sourcesContent":["export const todoReducer = (state= [], action)  => {\r\n       switch (action.type) {\r\n           case 'ADD_TODO':\r\n                return [...state, {\r\n                    id: Math.random(),\r\n                    completed: false,\r\n                    content: action.payload\r\n                }];\r\n           case \"TOGGLE_TODO\":\r\n               return state.map((todo) => {\r\n                   if(todo.id === action.payload){\r\n                       return {...todo, completed: !todo.completed}\r\n                   }\r\n                   return todo;\r\n               })\r\n            case \"DELETE_TODO\":\r\n                return state.filter(todo => {\r\n                    return todo.id !== action.payload\r\n                })\r\n\r\n\r\n\r\n\r\n           default:\r\n               return state;\r\n       }\r\n};"]},"metadata":{},"sourceType":"module"}